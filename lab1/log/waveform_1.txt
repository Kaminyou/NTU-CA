$date
	Sun Oct 29 07:28:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var integer 32 # counter [31:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % outfile [31:0] $end
$scope module CPU $end
$var wire 1 & RegWrite $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ' zero $end
$var wire 32 ( pc_next [31:0] $end
$var wire 32 ) pc [31:0] $end
$var wire 32 * instr [31:0] $end
$var wire 32 + immed [31:0] $end
$var wire 32 , RS2data [31:0] $end
$var wire 32 - RS1data [31:0] $end
$var wire 32 . ALUres [31:0] $end
$var wire 32 / ALUdata2_i [31:0] $end
$var wire 1 0 ALUSrc $end
$var wire 2 1 ALUOp [1:0] $end
$var wire 3 2 ALUCtr [2:0] $end
$scope module ALU $end
$var wire 1 ' zero_o $end
$var wire 32 3 src2_i [31:0] $end
$var wire 32 4 src1_i [31:0] $end
$var wire 32 5 res_o [31:0] $end
$var wire 3 6 ALUCtr_i [2:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 10 7 func_i [9:0] $end
$var wire 2 8 ALUOp_i [1:0] $end
$var wire 3 9 ALUCtr_o [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 : src2_i [31:0] $end
$var wire 32 ; src1_i [31:0] $end
$var wire 32 < res_o [31:0] $end
$upscope $end
$scope module Control $end
$var wire 7 = Op_i [6:0] $end
$var wire 1 & RegWrite_o $end
$var wire 1 0 ALUSrc_o $end
$var wire 2 > ALUOp_o [1:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 ? instr_o [31:0] $end
$var wire 32 @ addr_i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 0 select_i $end
$var wire 32 A src1_i [31:0] $end
$var wire 32 B src0_i [31:0] $end
$var wire 32 C res_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 D pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 E pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 F RDaddr_i [4:0] $end
$var wire 32 G RDdata_i [31:0] $end
$var wire 5 H RS1addr_i [4:0] $end
$var wire 32 I RS1data_o [31:0] $end
$var wire 5 J RS2addr_i [4:0] $end
$var wire 32 K RS2data_o [31:0] $end
$var wire 1 & RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var integer 32 L i [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 12 M data_i [11:0] $end
$var wire 32 N data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 N
b1010 M
b100000 L
b0 K
b1010 J
b0 I
b0 H
b1010 G
b101 F
b0 E
b100 D
b1010 C
b0 B
b1010 A
b0 @
b101000000000001010010011 ?
b11 >
b10011 =
b100 <
b0 ;
b100 :
b110 9
b11 8
b0 7
b110 6
b1010 5
b0 4
b1010 3
b110 2
b11 1
10
b1010 /
b1010 .
b0 -
b0 ,
b1010 +
b101000000000001010010011 *
b0 )
b100 (
0'
1&
b11 %
b100000000 $
b0 #
0"
0!
$end
#12
1"
#25
b1101 .
b1101 5
b1101 G
b1101 /
b1101 3
b1101 C
b1101 +
b1101 A
b1101 N
b1101 M
b110 F
b1101 J
b110100000000001100010011 *
b110100000000001100010011 ?
b1000 (
b1000 <
b1000 D
b100 )
b100 ;
b100 @
b100 E
b1 #
1!
#50
0!
#75
b10000010 .
b10000010 5
b10000010 G
b101 2
b101 6
b101 9
b1101 /
b1101 3
b1101 C
b10 1
b10 8
b10 >
00
b1000 7
b100110 +
b100110 A
b100110 N
b100110 M
b111 F
b1101 ,
b1101 B
b1101 K
b110 J
b1010 -
b1010 4
b1010 I
b101 H
b110011 =
b10011000101000001110110011 *
b10011000101000001110110011 ?
b1100 (
b1100 <
b1100 D
b1000 )
b1000 ;
b1000 @
b1000 E
b10 #
1!
#100
0!
#125
b10101001 .
b10101001 5
b10101001 G
1'
b11100 F
b1101 -
b1101 4
b1101 I
b110 H
b10011000110000111000110011 *
b10011000110000111000110011 ?
b10000 (
b10000 <
b10000 D
b1100 )
b1100 ;
b1100 @
b1100 E
b11 #
1!
#150
0!
#175
b1100 .
b1100 5
b1100 G
0'
b110 2
b110 6
b110 9
b11111111111111111111111111111111 /
b11111111111111111111111111111111 3
b11111111111111111111111111111111 C
b11 1
b11 8
b11 >
10
b1111111000 7
b11111111111111111111111111111111 +
b11111111111111111111111111111111 A
b11111111111111111111111111111111 N
b111111111111 M
b110 F
b0 ,
b0 B
b0 K
b11111 J
b10011 =
b11111111111100110000001100010011 *
b11111111111100110000001100010011 ?
b10100 (
b10100 <
b10100 D
b10000 )
b10000 ;
b10000 @
b10000 E
b100 #
1!
#200
0!
#225
b11111 .
b11111 5
b11111 G
b11111 /
b11111 3
b11111 C
b0 7
b11111 +
b11111 A
b11111 N
b11111 M
b11110 F
b0 H
b1111100000000111100010011 *
b1111100000000111100010011 ?
b0 -
b0 4
b0 I
b11000 (
b11000 <
b11000 D
b10100 )
b10100 ;
b10100 @
b10100 E
b101 #
1!
#250
0!
#275
b0 .
b0 5
b0 G
b0 2
b0 6
b0 9
b10000010 /
b10000010 3
b10000010 C
b10 1
b10 8
b10 >
00
b111 7
b111 +
b111 A
b111 N
b111 M
b11100 F
b10000010 ,
b10000010 B
b10000010 K
b111 J
b1100 -
b1100 4
b1100 I
b110 H
b110011 =
b11100110111111000110011 *
b11100110111111000110011 ?
b11100 (
b11100 <
b11100 D
b11000 )
b11000 ;
b11000 @
b11000 E
b110 #
1!
#300
0!
#325
b10000010 .
b10000010 5
b10000010 G
b1 2
b1 6
b1 9
b100 7
b11101 F
b0 -
b0 4
b0 I
b11100 H
b11111100100111010110011 *
b11111100100111010110011 ?
b100000 (
b100000 <
b100000 D
b11100 )
b11100 ;
b11100 @
b11100 E
b111 #
1!
#350
0!
#375
b0 .
b0 5
b0 G
1'
b0 /
b0 3
b0 C
b1101 +
b1101 A
b1101 N
b1101 M
b1110 F
b0 ,
b0 B
b0 K
b1101 J
b1010 H
b110101010100011100110011 *
b110101010100011100110011 ?
b100100 (
b100100 <
b100100 D
b100000 )
b100000 ;
b100000 @
b100000 E
b1000 #
1!
#400
0!
#425
b11111111111111111111111101111110 .
b11111111111111111111111101111110 5
b11111111111111111111111101111110 G
b100 2
b100 6
b100 9
0'
b10000010 /
b10000010 3
b10000010 C
b100000000 7
b10000000111 +
b10000000111 A
b10000000111 N
b10000000111 M
b101 F
b10000010 ,
b10000010 B
b10000010 K
b111 J
b11100 H
b1000000011111100000001010110011 *
b1000000011111100000001010110011 ?
b101000 (
b101000 <
b101000 D
b100100 )
b100100 ;
b100100 @
b100100 E
b1001 #
1!
#450
0!
#475
b11111111111111111111111111111000 .
b11111111111111111111111111111000 5
b11111111111111111111111111111000 G
0'
b110 2
b110 6
b110 9
b11111111111111111111111111111000 /
b11111111111111111111111111111000 3
b11111111111111111111111111111000 C
b11 1
b11 8
b11 >
10
b1111111000 7
b11111111111111111111111111111000 +
b11111111111111111111111111111000 A
b11111111111111111111111111111000 N
b111111111000 M
b11111 F
b0 ,
b0 B
b0 K
b11000 J
b11111 H
b10011 =
b11111111100011111000111110010011 *
b11111111100011111000111110010011 ?
b101100 (
b101100 <
b101100 D
b101000 )
b101000 ;
b101000 @
b101000 E
b1010 #
1!
#500
0!
#525
b11111111111111111111111111110000 .
b11111111111111111111111111110000 5
b11111111111111111111111111110000 G
1'
b11111111111111111111111111111000 -
b11111111111111111111111111111000 4
b11111111111111111111111111111000 I
b110000 (
b110000 <
b110000 D
b101100 )
b101100 ;
b101100 @
b101100 E
b1011 #
1!
#550
0!
#575
b11111111111111111111111111101000 .
b11111111111111111111111111101000 5
b11111111111111111111111111101000 G
0'
b110100 (
b110100 <
b110100 D
b110000 )
b110000 ;
b110000 @
b110000 E
b11111111111111111111111111110000 -
b11111111111111111111111111110000 4
b11111111111111111111111111110000 I
b1100 #
1!
#600
0!
#625
b111111 .
b111111 5
b111111 G
b111111 /
b111111 3
b111111 C
b1000 7
b111111 +
b111111 A
b111111 N
b111111 M
b111 F
b11111111111111111111111111101000 ,
b11111111111111111111111111101000 B
b11111111111111111111111111101000 K
b11111 J
b0 H
b11111100000000001110010011 *
b11111100000000001110010011 ?
b0 -
b0 4
b0 I
b111000 (
b111000 <
b111000 D
b110100 )
b110100 ;
b110100 @
b110100 E
b1101 #
1!
#650
0!
#675
b1111 .
b1111 5
b1111 G
b111 2
b111 6
b111 9
b10000000010 /
b10000000010 3
b10000000010 C
0'
b100000101 7
b10000000010 +
b10000000010 A
b10000000010 N
b10000000010 M
b0 ,
b0 B
b0 K
b10 J
b111111 -
b111111 4
b111111 I
b111 H
b1000000001000111101001110010011 *
b1000000001000111101001110010011 ?
b111100 (
b111100 <
b111100 D
b111000 )
b111000 ;
b111000 @
b111000 E
b1110 #
1!
#700
0!
#725
b11 .
b11 5
b11 G
b1111 -
b1111 4
b1111 I
b1000000 (
b1000000 <
b1000000 D
b111100 )
b111100 ;
b111100 @
b111100 E
b1111 #
1!
#750
0!
#775
b0 .
b0 5
b0 G
b1000100 (
b1000100 <
b1000100 D
b1000000 )
b1000000 ;
b1000000 @
b1000000 E
b11 -
b11 4
b11 I
b10000 #
1!
#800
0!
#825
b110 .
b110 5
b110 G
b10000000001 /
b10000000001 3
b10000000001 C
b10000000001 +
b10000000001 A
b10000000001 N
b10000000001 M
b110 F
b1 J
b110 H
b1000000000100110101001100010011 *
b1000000000100110101001100010011 ?
b1100 -
b1100 4
b1100 I
b1001000 (
b1001000 <
b1001000 D
b1000100 )
b1000100 ;
b1000100 @
b1000100 E
b10001 #
1!
#850
0!
#875
b11 .
b11 5
b11 G
b1001100 (
b1001100 <
b1001100 D
b1001000 )
b1001000 ;
b1001000 @
b1001000 E
b110 -
b110 4
b110 I
b10010 #
1!
#900
0!
#925
b1 .
b1 5
b1 G
b11 -
b11 4
b11 I
b1010000 (
b1010000 <
b1010000 D
b1001100 )
b1001100 ;
b1001100 @
b1001100 E
b10011 #
1!
#950
0!
#975
b11111111111111111111111111010000 .
b11111111111111111111111111010000 5
b11111111111111111111111111010000 G
b10 2
b10 6
b10 9
b1 /
b1 3
b1 C
b10 1
b10 8
b10 >
00
b1 7
b110 +
b110 A
b110 N
b110 M
b11111 F
b1 ,
b1 B
b1 K
b110 J
b11111 H
b110011 =
b11011111001111110110011 *
b11011111001111110110011 ?
b1010100 (
b1010100 <
b1010100 D
b1010000 )
b1010000 ;
b1010000 @
b1010000 E
b11111111111111111111111111101000 -
b11111111111111111111111111101000 4
b11111111111111111111111111101000 I
b10100 #
1!
#1000
0!
#1025
b11111111111111111111111110100000 .
b11111111111111111111111110100000 5
b11111111111111111111111110100000 G
b11111111111111111111111111010000 -
b11111111111111111111111111010000 4
b11111111111111111111111111010000 I
b1011000 (
b1011000 <
b1011000 D
b1010100 )
b1010100 ;
b1010100 @
b1010100 E
b10101 #
1!
#1050
0!
#1075
1'
b110 2
b110 6
b110 9
b0 /
b0 3
b0 C
b11 1
b11 8
b11 >
10
b0 .
b0 5
b0 G
b0 7
b0 +
b0 A
b0 N
b0 M
b0 F
b0 ,
b0 B
b0 K
b0 J
b0 H
b0 =
b0 *
b0 ?
b1011100 (
b1011100 <
b1011100 D
b1011000 )
b1011000 ;
b1011000 @
b1011000 E
b0 -
b0 4
b0 I
b10110 #
1!
#1100
0!
#1125
b1100000 (
b1100000 <
b1100000 D
b1011100 )
b1011100 ;
b1011100 @
b1011100 E
b10111 #
1!
#1150
0!
#1175
b1100100 (
b1100100 <
b1100100 D
b1100000 )
b1100000 ;
b1100000 @
b1100000 E
b11000 #
1!
#1200
0!
#1225
b1101000 (
b1101000 <
b1101000 D
b1100100 )
b1100100 ;
b1100100 @
b1100100 E
b11001 #
1!
#1250
0!
#1275
b1101100 (
b1101100 <
b1101100 D
b1101000 )
b1101000 ;
b1101000 @
b1101000 E
b11010 #
1!
#1300
0!
#1325
b1110000 (
b1110000 <
b1110000 D
b1101100 )
b1101100 ;
b1101100 @
b1101100 E
b11011 #
1!
#1350
0!
#1375
b1110100 (
b1110100 <
b1110100 D
b1110000 )
b1110000 ;
b1110000 @
b1110000 E
b11100 #
1!
#1400
0!
#1425
b1111000 (
b1111000 <
b1111000 D
b1110100 )
b1110100 ;
b1110100 @
b1110100 E
b11101 #
1!
#1450
0!
#1475
b1111100 (
b1111100 <
b1111100 D
b1111000 )
b1111000 ;
b1111000 @
b1111000 E
b11110 #
1!
#1500
0!
#1525
b10000000 (
b10000000 <
b10000000 D
b1111100 )
b1111100 ;
b1111100 @
b1111100 E
1!
